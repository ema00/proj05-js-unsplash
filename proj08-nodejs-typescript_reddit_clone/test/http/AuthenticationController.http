// Tests for the Authentication Controller

### Authentication endpoints
@domain = http://localhost:3000/
@loginEndpoint = login/
@logoutEndpoint = logout/
@loginUrl = {{domain}}{{loginEndpoint}}
@logoutUrl = {{domain}}{{logoutEndpoint}}


### Request Token for an existing User, right password
### Return Status 200
# @name loginUser
@userName = "johnson"
@userPassword = "benny999"
POST {{loginUrl}} HTTP/1.1
Content-Type: application/json
Accept: application/json

{
    "name": {{userName}},
    "password": {{userPassword}}
}


### Try to logout an User that is logged in, wrong session
### Return Status 200, but don't log out (see database)
@userId = {{loginUser.response.body.$.session.userId}}
@falseToken = "anytoken"
POST {{logoutUrl}} HTTP/1.1
Content-Type: application/json
Accept: application/json

{
    "userId": {{userId}},
    "token": {{falseToken}}
}


### Logout an existing User, right session
### Return Status 200; logout if user is logged in
@userId = {{loginUser.response.body.$.session.userId}}
@token = "{{loginUser.response.body.$.session.token}}"
POST {{logoutUrl}} HTTP/1.1
Content-Type: application/json
Accept: application/json

{
    "userId": {{userId}},
    "token": {{token}}
}


### Request Token for a non-existing User
### Return Status 400
@userNameNonExistent = "juancho"
POST {{loginUrl}} HTTP/1.1
Content-Type: application/json
Accept: application/json

{
    "name": {{userNameNonExistent}},
    "password": {{userPassword}}
}


### Request Token for an existing User, but wrong password
### Return Status 400
@passwordWrong = "johnsonsPass"
POST {{loginUrl}} HTTP/1.1
Content-Type: application/json
Accept: application/json

{
    "name": {{userName}},
    "password": {{passwordWrong}}
}

